4/5/2025 2:00AM
Created database FitnessTrackingDb.
Added connectionString path in Program.cs
ConnectionString settings are as follows "Trusted_Connection=True;Encrypt=False;TrustServerCertificate=True";
Created FavoriteWorkout.cs model.
Created FavoriteRecipe.cs model.
Added references to FavoriteWorkout.cs and FavoriteRecipe.cs models in AppDbContext.cs
Created InitialCreate migration with tables Users, Workouts, Recipes.
Created AddedFavWorkoutsRecipes migration with tables FavoriteWorkouts, FavoriteRecipes.
Tested database FitnessTrackingDb through SSMS. Successful.

4/6/2025 12:36AM
Created UserController.cs in Controllers folder.
Followed this tutorial for the changes listed below. https://rb.gy/dqecqq
The UserController constructor assigns the AppDbContext reference to a private field _context.
Added GetUsers() and GetusersById() methods with the [HttpGet] attribute.
GetUsers() saves all the users as a c sharp list.
GetUserById() uses the function Find() to find the user searching by id.
The function Find() is a better option for searching a table, as stated by the tutorial.
The [FromRoute] attribute in ASP.NET Core is used to explicitly specify that a parameter should be populated from the route data in the URL.

4/6/2025 1:48PM
Added two rows in Users table using SSMS with SQL.
Tested /api/user/GetUsers and /api/user/GetUserById/{userId} using swagger. Successful.

4/9/2025 12:48PM
Added UserDto.cs without password for security.
Added LogInDto.cs with only Username and Password for authentication.

4/11/2025
Just got word that we don't need mappers.

4/14/2025 2:43PM
Decided to use mappers anyway.
Added DTOs for GET, POST, PUT, DELETE for Users.
Created UserMappers.cs with mapper functions to get, create, update User data. Bmi is calculated in a seperate function.
Mappers connect DTOs to Entities. In controllers we will call mapper functions to connect to DTOs. We won't call DTOs directly.
The code _context.Users.Add(user); in CreateUser function in UserController uses .Add() EF function that automatically makes a INSERT sql query.
EF functions don't execute the moment they are called! 
EF functions make queries ready to be executed. The query is executed only with the function _context.SaveChanges()
Tested /api/user/CreateUser using swagger. Successful.
Tested /api/user/UpdateUser using swagger. Successful.
Tested /api/user/DeleteUser/{userId} using swagger. Successful.
Added CORS.
